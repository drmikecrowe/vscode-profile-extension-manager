name: Build Executables

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  pull_request:
    branches: [main]

jobs:
  pyinstaller-build-windows:
    runs-on: windows-latest
    steps:
      - name: Create Windows Executable
        uses: sayyid5416/pyinstaller@v1
        with:
          path: src
          python_ver: '3.11'
          pyinstaller_ver: '==5.13.2'
          spec: 'src/vpem.spec'
          requirements: 'requirements.txt'
          upload_exe_with_name: 'vpem-windows'

  pyinstaller-build-macos-x86:
    runs-on: macos-latest
    steps:
      - name: Create macOS x86 Executable
        uses: sayyid5416/pyinstaller@v1
        with:
          path: src
          python_ver: '3.11'
          pyinstaller_ver: '==5.13.2'
          spec: 'src/vpem.spec'
          requirements: 'requirements.txt'
          upload_exe_with_name: 'vpem-macos-x86'

  pyinstaller-build-macos-arm:
    runs-on: macos-latest
    steps:
      - name: Create macOS ARM Executable
        uses: sayyid5416/pyinstaller@v1
        with:
          path: src
          python_ver: '3.11'
          pyinstaller_ver: '==5.13.2'
          spec: 'src/vpem.spec'
          requirements: 'requirements.txt'
          upload_exe_with_name: 'vpem-macos-arm'
          options: --target-arch arm64

  pyinstaller-build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Create Linux x64 Executable
        uses: sayyid5416/pyinstaller@v1
        with:
          path: src
          python_ver: '3.11'
          pyinstaller_ver: '==5.13.2'
          spec: 'src/vpem.spec'
          requirements: 'requirements.txt'
          upload_exe_with_name: 'vpem-linux-x64'

  create-release:
    needs:
      [
        pyinstaller-build-windows,
        pyinstaller-build-macos-x86,
        pyinstaller-build-macos-arm,
        pyinstaller-build-linux,
      ]
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/vpem-windows/vpem-windows.exe
          asset_name: vpem-windows.exe
          asset_content_type: application/octet-stream
